name: Swift Package Release (Simple)

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  release:
    name: Create Swift Package Release
    runs-on: macos-latest
    
    permissions:
      contents: write
      packages: write
      actions: read
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Get Version Info
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          tag_name=${GITHUB_REF#refs/tags/}
          echo "tag=$tag_name" >> $GITHUB_OUTPUT
          echo "version=$tag_name" >> $GITHUB_OUTPUT
        else
          echo "tag=manual-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          echo "version=0.0.0" >> $GITHUB_OUTPUT
        fi
    
    - name: Validate Package
      run: |
        echo "🔍 Validating Package.swift..."
        swift package dump-package > /dev/null
        echo "✅ Package.swift is valid"
        
        echo "📦 Resolving dependencies..."
        swift package resolve
        echo "✅ Dependencies resolved"
    
    - name: Validate XCFrameworks
      run: |
        echo "🔍 Validating XCFrameworks..."
        for framework in *.xcframework; do
          if [ -d "$framework" ]; then
            echo "✅ $framework exists"
            if [ -f "$framework/Info.plist" ]; then
              echo "✅ $framework has valid Info.plist"
            else
              echo "❌ $framework missing Info.plist"
              exit 1
            fi
          fi
        done
        echo "✅ All XCFrameworks validated"
    
    - name: Create Release Archive
      run: |
        echo "📦 Creating release archive..."
        
        # Create a clean archive without git files
        tar --exclude='.git*' --exclude='*.tar.gz' -czf "CashfreePG-${{ steps.version.outputs.version }}.tar.gz" .
        
        echo "✅ Archive created: CashfreePG-${{ steps.version.outputs.version }}.tar.gz"
        ls -lah "CashfreePG-${{ steps.version.outputs.version }}.tar.gz"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: "CashfreePG iOS SDK ${{ steps.version.outputs.version }}"
        body: |
          ## CashfreePG iOS SDK ${{ steps.version.outputs.version }}
          
          ### 📦 Installation via Swift Package Manager
          Add this to your `Package.swift`:
          
          ```swift
          dependencies: [
              .package(url: "https://github.com/${{ github.repository }}.git", from: "${{ steps.version.outputs.version }}")
          ]
          ```
          
          Or add via Xcode:
          1. File → Add Package Dependencies
          2. Enter: `https://github.com/${{ github.repository }}.git`
          3. Select version: `${{ steps.version.outputs.version }}`
          
          ### 🔧 WebKit Integration
          If you encounter WebKit linking issues with SPM, see our [SPM Integration Guide](https://github.com/${{ github.repository }}/blob/main/SPM_INTEGRATION_GUIDE.md#webkit-not-linked-error).
          
          ### 📚 Documentation
          - [SPM Integration Guide](https://github.com/${{ github.repository }}/blob/main/SPM_INTEGRATION_GUIDE.md)
          - [Official Documentation](https://docs.cashfree.com/docs/ios-native)
          
          ### 🆕 What's Changed
          - Improved SPM integration
          - WebKit linking fixes
          - Updated documentation
          
        files: |
          CashfreePG-${{ steps.version.outputs.version }}.tar.gz
        draft: false
        prerelease: false
    
    - name: Generate Release Summary
      run: |
        echo "## 🎉 CashfreePG iOS SDK ${{ steps.version.outputs.version }} Released" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Release Complete" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Package validated successfully" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ XCFrameworks verified" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ GitHub release created" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Archive uploaded" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Package Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: https://github.com/${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release**: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Usage" >> $GITHUB_STEP_SUMMARY
        echo "Users can now install via:" >> $GITHUB_STEP_SUMMARY
        echo "- Swift Package Manager (recommended)" >> $GITHUB_STEP_SUMMARY
        echo "- CocoaPods" >> $GITHUB_STEP_SUMMARY
        echo "- Manual XCFramework download" >> $GITHUB_STEP_SUMMARY
